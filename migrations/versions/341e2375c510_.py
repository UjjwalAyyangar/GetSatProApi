"""empty message

Revision ID: 341e2375c510
Revises: 
Create Date: 2019-11-08 13:59:08.249876

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '341e2375c510'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('module',
    sa.Column('Module_ID', sa.Integer(), nullable=False),
    sa.Column('Module_Name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('Module_ID'),
    sa.UniqueConstraint('Module_Name')
    )
    op.create_table('user_role',
    sa.Column('Role_ID', sa.Integer(), nullable=False),
    sa.Column('User_Type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('Role_ID'),
    sa.UniqueConstraint('User_Type')
    )
    op.create_table('exam',
    sa.Column('Exam_ID', sa.Integer(), nullable=False),
    sa.Column('Exam_Name', sa.String(length=100), nullable=False),
    sa.Column('Published', sa.DateTime(), nullable=True),
    sa.Column('Expired', sa.DateTime(), nullable=True),
    sa.Column('Module_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Module_ID'], ['module.Module_ID'], ),
    sa.PrimaryKeyConstraint('Exam_ID')
    )
    op.create_table('flashcard_set',
    sa.Column('Set_ID', sa.Integer(), nullable=False),
    sa.Column('Set_Name', sa.String(length=100), nullable=False),
    sa.Column('Module_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Module_ID'], ['module.Module_ID'], ),
    sa.PrimaryKeyConstraint('Set_ID')
    )
    op.create_table('user_info',
    sa.Column('User_ID', sa.Integer(), nullable=False),
    sa.Column('First_Name', sa.String(length=250), nullable=False),
    sa.Column('Last_Name', sa.String(length=250), nullable=False),
    sa.Column('Username', sa.String(length=250), nullable=False),
    sa.Column('Email', sa.String(length=400), nullable=False),
    sa.Column('Phone', sa.String(length=20), nullable=False),
    sa.Column('Role_ID', sa.Integer(), nullable=True),
    sa.Column('Last_Login', sa.DateTime(), nullable=True),
    sa.Column('Login_password', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['Role_ID'], ['user_role.Role_ID'], ),
    sa.PrimaryKeyConstraint('User_ID'),
    sa.UniqueConstraint('Email'),
    sa.UniqueConstraint('Phone'),
    sa.UniqueConstraint('Username')
    )
    op.create_table('discussion',
    sa.Column('Discussion_ID', sa.Integer(), nullable=False),
    sa.Column('Main_Discussion', sa.String(length=1000), nullable=False),
    sa.Column('User_ID', sa.Integer(), nullable=True),
    sa.Column('Module_ID', sa.Integer(), nullable=True),
    sa.Column('Time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['Module_ID'], ['module.Module_ID'], ),
    sa.ForeignKeyConstraint(['User_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Discussion_ID')
    )
    op.create_table('exam_question',
    sa.Column('Question_ID', sa.Integer(), nullable=False),
    sa.Column('Question', sa.String(length=80), nullable=True),
    sa.Column('Option_1', sa.String(length=100), nullable=True),
    sa.Column('Option_2', sa.String(length=100), nullable=True),
    sa.Column('Option_3', sa.String(length=100), nullable=True),
    sa.Column('Option_4', sa.String(length=100), nullable=True),
    sa.Column('Correct_ans', sa.Integer(), nullable=False),
    sa.Column('Exam_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Exam_ID'], ['exam.Exam_ID'], ),
    sa.PrimaryKeyConstraint('Question_ID')
    )
    op.create_table('flashcard',
    sa.Column('FC_ID', sa.Integer(), nullable=False),
    sa.Column('Set_Id', sa.Integer(), nullable=True),
    sa.Column('Question', sa.String(length=100), nullable=False),
    sa.Column('Answer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Set_Id'], ['flashcard_set.Set_ID'], ),
    sa.PrimaryKeyConstraint('FC_ID')
    )
    op.create_table('student_answer_sheet',
    sa.Column('Sheet_ID', sa.Integer(), nullable=False),
    sa.Column('Student_ID', sa.Integer(), nullable=True),
    sa.Column('Exam_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Exam_ID'], ['exam.Exam_ID'], ),
    sa.ForeignKeyConstraint(['Student_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Sheet_ID')
    )
    op.create_table('FC__preference',
    sa.Column('Student_ID', sa.Integer(), nullable=False),
    sa.Column('FC_ID', sa.Integer(), nullable=False),
    sa.Column('Category_Name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['FC_ID'], ['flashcard.FC_ID'], ),
    sa.ForeignKeyConstraint(['Student_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Student_ID', 'FC_ID')
    )
    op.create_table('discussion_thread',
    sa.Column('Thread_ID', sa.Integer(), nullable=False),
    sa.Column('Discussion_ID', sa.Integer(), nullable=True),
    sa.Column('User_ID', sa.Integer(), nullable=True),
    sa.Column('Message', sa.String(length=10000), nullable=False),
    sa.Column('Time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['Discussion_ID'], ['discussion.Discussion_ID'], ),
    sa.ForeignKeyConstraint(['User_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Thread_ID')
    )
    op.create_table('student_report',
    sa.Column('Student_ID', sa.Integer(), nullable=False),
    sa.Column('Exam_ID', sa.Integer(), nullable=False),
    sa.Column('Sheet_ID', sa.Integer(), nullable=True),
    sa.Column('Grade', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Exam_ID'], ['exam.Exam_ID'], ),
    sa.ForeignKeyConstraint(['Sheet_ID'], ['student_answer_sheet.Sheet_ID'], ),
    sa.ForeignKeyConstraint(['Student_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Student_ID', 'Exam_ID')
    )
    op.create_table('user_answer',
    sa.Column('Sheet_ID', sa.Integer(), nullable=True),
    sa.Column('Student_ID', sa.Integer(), nullable=False),
    sa.Column('Question_ID', sa.Integer(), nullable=False),
    sa.Column('Ans', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Question_ID'], ['exam_question.Question_ID'], ),
    sa.ForeignKeyConstraint(['Sheet_ID'], ['student_answer_sheet.Sheet_ID'], ),
    sa.ForeignKeyConstraint(['Student_ID'], ['user_info.User_ID'], ),
    sa.PrimaryKeyConstraint('Student_ID', 'Question_ID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_answer')
    op.drop_table('student_report')
    op.drop_table('discussion_thread')
    op.drop_table('FC__preference')
    op.drop_table('student_answer_sheet')
    op.drop_table('flashcard')
    op.drop_table('exam_question')
    op.drop_table('discussion')
    op.drop_table('user_info')
    op.drop_table('flashcard_set')
    op.drop_table('exam')
    op.drop_table('user_role')
    op.drop_table('module')
    # ### end Alembic commands ###
