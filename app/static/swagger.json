{"info": {"description": "For squadrons, by squadrons", "title": "Get Sat Pro API", "version": "0.0.1"}, "paths": {"/register": {"post": {"description": "User Registration.", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["username", "fname", "lname", "password", "email", "phone", "role_id"], "properties": {"username": {"type": "string", "description": "Username", "example": "ObiWan"}, "fname": {"type": "string", "description": "First name of the user", "example": "Obi"}, "lname": {"type": "string", "description": "Last name of the user", "example": "Wan"}, "password": {"type": "string", "description": "The password that the user wants to set", "example": "Ob12W@n"}, "email": {"type": "string", "description": "Email id of the user", "example": "obi@wan.com"}, "phone": {"type": "string", "description": "Phone number of the user", "example": "999-999-9999"}, "role_id": {"type": "string", "description": "Used to denote the type of user. 1 = Student, 2 = Tutor, 3 = Admin", "example": 1}}}}}}, "responses": {"200": {"description": "Successful creation of a user", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "User created successfully"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only Admins can add new users to the system."}}}}}}, "405": {"description": "Bad Method", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 405}, "message": {"type": "string", "example": "Method not allowed"}}}}}}}}}, "/login": {"post": {"description": "Login", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "properties": {"username": {"type": "string", "description": "Username of the user who wants to log in", "example": "ObiWan", "required": true}, "password": {"type": "string", "description": "Password of the user who wants to log in", "example": "P@$$word", "required": true}}}}}}, "responses": {"200": {"description": "Successful login", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "User logged in successfully"}, "token": {"type": "string", "example": "the JWT token"}, "refresh": {"type": "string", "example": "the refresh token"}, "user_info": {"type": "object", "properties": {"first_name": {"type": "string", "example": "Obi"}, "last_name": {"type": "string", "example": "Wan"}, "user_id": {"type": "string", "example": 123}, "user_type": {"type": "string", "example": "Student"}, "username": {"type": "string", "example": "ObiWan"}}}}}}}}, "401": {"description": "Invalid credentials", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Invalid credentials"}}}}}}}}}, "/logout": {"get": {"description": "Logout", "responses": {"200": {"description": "Successful Logout", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "User logged out successfully"}, "user_id": {"type": "string", "description": "the userid of the logged out user", "example": 23}}}}}}, "400": {"description": "Already logged out", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Already logged out i.e. no user is logged in."}}}}}}}}}, "/api/get_students": {"get": {"description": "List of students.", "responses": {"200": {"description": "Successfully fetched the list of students", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Successfully fetched the list of students"}, "students": {"type": "array", "description": "A list of dictionary of students", "items": {"type": "object", "description": "Student list", "properties": {"username": {"type": "string", "example": "ObiWan", "description": "Username of the student"}, "user_id": {"type": "string", "example": 1234, "description": "User ID of the student"}, "fname": {"type": "string", "example": "Obi", "description": "First name of the student"}, "lname": {"type": "string", "example": "Wan", "description": "Last name of the student"}}}}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request"}}}}}}, "404": {"description": "Students not found", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 404}, "message": {"type": "string", "example": "Not found"}}}}}}}}}, "/api/add_module": {"post": {"description": "Adding a new module", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["mod_name"], "properties": {"mod_name": {"type": "string", "description": "The name of the module that needs to be added", "example": "maths"}}}}}}, "responses": {"200": {"description": "Successful creation of a new module", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Module added in successfully"}}}}}}, "401": {"description": "Bad request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only an admin is allowed to add modules."}}}}}}}}}, "/api/get_modules": {"get": {"description": "Getting list of modules", "responses": {"200": {"description": "Successfully fetched modules", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "integer", "example": 200}, "message": {"type": "string", "example": "Sucessfully fetched all the modules"}, "mod_list": {"type": "array", "items": {"type": "object", "properties": {"mod_id": {"type": "integer", "description": "Module id", "example": 34}, "mod_name": {"type": "string", "description": "the name of the Module", "example": "Maths"}, "progress": {"type": "flaot", "description": "The progress of the student in the module", "example": 20.0}}}}}}}}}, "400": {"description": "Bad request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Bad request"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only admins and students are allowed to make this request."}}}}}}}}, "post": {"description": "Getting list of modules", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "properties": {"stud_id": {"type": "integer", "description": "The id of the student whose modules you want to see", "example": 34}}}}}}, "responses": {"200": {"description": "Successfully fetched modules", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "integer", "example": 200}, "message": {"type": "string", "example": "Sucessfully fetched all the modules"}, "mod_list": {"type": "array", "description": "Won't see progress unless stud_id is provided", "items": {"type": "object", "properties": {"mod_id": {"type": "integer", "description": "Module id", "example": 34}, "mod_name": {"type": "string", "description": "the name of the Module", "example": "Maths"}, "progress": {"type": "flaot", "description": "The progress of the student in the module", "example": 20.0}}}}}}}}}, "400": {"description": "Bad request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Bad request"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only admins and students are allowed to make this request."}}}}}}}}}, "/api/delete": {"post": {"description": "Deletion", "requestBody": {"description": "Request body", "required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["model_name", "model_id"], "properties": {"model_name": {"type": "string", "description": "required", "example": "Module (or Exam or User or Discussion or Flashcard)"}, "model_id": {"type": "integer", "example": 234}}}}}}, "responses": {"200": {"description": "Successfully deleted", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Deleted successfully"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "You are not authorized to make this request."}}}}}}, "500": {"description": "Bad Method", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 405}, "message": {"type": "string", "example": "Internal Server Error"}}}}}}}}}, "/api/create_exam": {"post": {"description": "Exam creation", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["mod_id", "exam_name", "exam"], "properties": {"mod_id": {"type": "integer", "description": "Module ID", "example": 1}, "exam_name": {"type": "string", "description": "Name of the exam", "example": "Midterm"}, "exam": {"type": "array", "description": "An array of questions", "items": {"type": "object", "properties": {"question": {"type": "string", "description": "The question", "example": "Who is Obi Wan?", "required": true}, "correct_ans": {"type": "string", "description": "Correct answer of the question", "example": 2}, "options": {"type": "array", "description": "Options of the question", "items": {"type": "string"}, "example": ["A Jedi", "A Sith", "Ujjwal's student"]}}}}}}}}}, "responses": {"200": {"description": "Successful creation of exam", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Exam created successfully"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only Admins or Tutors can make this request."}}}}}}}}}, "/api/get_exams": {"post": {"description": "List of Exams", "requestBody": {"description": "List of exams", "content": {"application/json": {"schema": {"type": "object", "properties": {"mod_id": {"type": "integer", "example": 324, "description": "OPTIONAL"}, "stud_id": {"type": "integer", "example": 34, "description": "REQUIRED if Tutor is making the request"}}}}}}, "responses": {"200": {"description": "Successfully fetched the list of students", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Successfully fetched the list of students"}, "exams": {"type": "array", "description": "A list of exams", "items": {"type": "object", "description": "Exam list", "properties": {"exam_id": {"type": "integer", "example": 1, "description": "Id of the exam of the student"}, "exam_name": {"type": "string", "example": "Sample", "description": "The name of the exam"}, "ques_no": {"type": "integer", "example": 10, "description": "Number of questions in an exam"}, "published": {"type": "string", "example": "11/2/2019", "description": "The date on which the exam was published"}, "mod_id": {"type": "integer", "example": 23, "description": "The id of the module to whom the exam belongs."}, "completed": {"type": "boolean", "example": true}}}}}}}}}, "404": {"description": "Exams not found", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 404}, "message": {"type": "string", "example": "Not found"}}}}}}, "401": {"description": "Unauthorized request. Cannot be made without login", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only Tutors and Students can make this request"}}}}}}}}}, "/api/submit_exam": {"post": {"description": "Exam Submission", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["exam_id", "sub"], "properties": {"exam_id": {"type": "integer", "description": "ID of the exam which you want to submit", "example": 1}, "sub": {"type": "array", "description": "An array of Questions and Answers", "items": {"type": "object", "properties": {"ques_id": {"type": "integer", "description": "ID of a question", "example": 1}, "ans": {"type": "integer", "description": "The answer option of a question", "example": 1}}}}}}}}}, "responses": {"200": {"description": "Successful submission", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "Exam submitted successfully"}}}}}}, "401": {"description": "Only a student can make this request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Only a student user can submit an exam."}}}}}}, "400": {"description": "Already submitted", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "The exam is already submitted."}}}}}}}}}, "/api/check_sub": {"post": {"description": "Check exam submission", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["exam_id", "student_id"], "properties": {"exam_id": {"type": "integer", "description": "ID of the exam whose grade you want to see", "example": 1, "required": true}, "student_id": {"type": "integer", "description": "ID of the student whose submission you want to check", "example": 45, "required": false}}}}}}, "responses": {"200": {"description": "Successful display", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "integer", "example": "Fetched exam successfully or Exam not submitted"}, "submitted": {"type": "string", "example": "True or False"}}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request"}}}}}}}}}, "/api/view_grade": {"post": {"description": "Viewing grade", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["exam_id"], "properties": {"exam_id": {"type": "integer", "description": "ID of the exam whose grade you want to see", "example": 1}, "stud_id": {"type": "integer", "description": "ID of the student whose grade you want to see", "example": 434, "required": false}}}}}}, "responses": {"200": {"description": "Successful display", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "integer", "example": "Grade displayed successfully"}, "grade": {"type": "string", "example": 100.0}, "exam_name": {"type": "string", "example": "Midterm"}}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request"}}}}}}}}}, "/api/view_grades": {"post": {"description": "Viewing grades", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "properties": {"mod_id": {"type": "integer", "description": "ID of the module, the grades of whose exam you want to see", "example": 1, "required": false}, "stud_id": {"type": "integer", "description": "ID of the student whose grade you want to see. You'll need to enter it if you are not a student.", "example": 434, "required": false}}}}}}, "responses": {"200": {"description": "Successful display", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "integer", "example": "Grade displayed successfully"}, "exams": {"type": "array", "items": {"type": "object", "properties": {"exam_id": {"type": "integer", "example": 3}, "exam_name": {"type": "string", "example": "Sample"}, "grade": {"type": "string", "example": 45.5}, "mod_id": {"type": "integer", "example": 4}}}}}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Bad Request"}}}}}}, "401": {"description": "Unauthorized request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request"}}}}}}}}}, "/api/create_discussion": {"post": {"description": "Create Discussion", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["title", "content", "mod_id"], "properties": {"title": {"type": "string", "description": "Title of the main discussion", "example": "Doubt in Algebra"}, "content": {"type": "string", "description": "Content of the main discussion", "example": "How to derive (x+y)^2 ?"}, "mod_id": {"type": "integer", "description": "ID of the module where the discussion has to be created", "example": 3}}}}}}, "responses": {"200": {"description": "Successfully created a new discussion", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "New discussion created successfully"}}}}}}, "401": {"description": "Need to be logged in to make this request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request."}}}}}}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Bad Request"}}}}}}}}}, "/api/create_discus_thread": {"post": {"description": "Create Reply/Thread", "requestBody": {"description": "Request body", "content": {"application/json": {"schema": {"type": "object", "required": ["discuss_id", "content"], "properties": {"discuss_id": {"type": "integer", "description": "ID of the discussion where you want to reply", "example": 3}, "content": {"type": "string", "description": "Content of the reply", "example": "Make a square and divide it."}}}}}}, "responses": {"200": {"description": "Successfully replied to the discussion", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 200}, "message": {"type": "string", "example": "New discussion reply created."}}}}}}, "401": {"description": "Need to be logged in to make this request", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 401}, "message": {"type": "string", "example": "Unauthorized request."}}}}}}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 400}, "message": {"type": "string", "example": "Bad Request"}}}}}}, "404": {"description": "The main discussion associated with the given discuss_id was not found", "content": {"application/json": {"schema": {"type": "object", "properties": {"Status": {"type": "string", "example": 404}, "message": {"type": "string", "example": "Not found."}}}}}}}}}}, "openapi": "3.0.2", "components": {"securitySchemes": {"jwt": {"type": "http", "scheme": "bearer", "bearerFormat": "JWT", "description": "We use JWT tokens for making authenticated requests"}}}}